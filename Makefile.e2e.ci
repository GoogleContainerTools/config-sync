### Golang e2e tests targets running against a GKE cluster

# CI target for running the entire e2e test suite on GKE.
# - Reuses build artifacts from postsubmit job
# - Creates N target clusters and runs the tests in parallel
# - Does not build any images or require docker-in-docker
.PHONY: test-e2e-gke-ci
test-e2e-gke-ci: pull-postsubmit-retry test-e2e-gke-nobuild

POSTSUBMIT_GCS_PREFIX ?= gs://kpt-config-sync-ci-postsubmit
POSTSUBMIT_REGISTRY ?= us-docker.pkg.dev/kpt-config-sync-ci-artifacts/postsubmit

.PHONY: postsubmit
postsubmit: build-cli
	$(MAKE) config-sync-manifest REGISTRY=$(POSTSUBMIT_REGISTRY)
	$(MAKE) publish-gcs GCS_PREFIX=$(POSTSUBMIT_GCS_PREFIX)

.PHONY: publish-gcs
publish-gcs:
	gsutil cp $(OSS_MANIFEST_STAGING_DIR)/* $(GCS_BUCKET)
	gsutil cp $(BIN_DIR)/darwin_amd64/nomos $(GCS_BUCKET)/darwin_amd64/nomos
	gsutil cp $(BIN_DIR)/darwin_arm64/nomos $(GCS_BUCKET)/darwin_arm64/nomos
	gsutil cp $(BIN_DIR)/linux_amd64/nomos $(GCS_BUCKET)/linux_amd64/nomos
	gsutil cp $(BIN_DIR)/linux_arm64/nomos $(GCS_BUCKET)/linux_arm64/nomos

.PHONY: pull-gcs
pull-gcs: clean $(OUTPUT_DIR)
	gsutil cp $(GCS_BUCKET)/*.yaml $(OSS_MANIFEST_STAGING_DIR)
	gsutil cp $(GCS_BUCKET)/darwin_amd64/nomos $(BIN_DIR)/darwin_amd64/nomos
	gsutil cp $(GCS_BUCKET)/darwin_arm64/nomos $(BIN_DIR)/darwin_arm64/nomos
	gsutil cp $(GCS_BUCKET)/linux_amd64/nomos $(BIN_DIR)/linux_amd64/nomos
	gsutil cp $(GCS_BUCKET)/linux_arm64/nomos $(BIN_DIR)/linux_arm64/nomos
	$(MAKE) copy-cli

.PHONY: pull-gcs-postsubmit
pull-gcs-postsubmit:
	$(MAKE) pull-gcs GCS_PREFIX=$(POSTSUBMIT_GCS_PREFIX)

.PHONY: pull-postsubmit-retry
pull-postsubmit-retry:
	./scripts/pull-postsubmit-retry.sh

.PHONY: deploy-postsubmit
deploy-postsubmit: pull-gcs-postsubmit deploy

.PHONY: vulnerability-scan-postsubmit
vulnerability-scan-postsubmit: pull-postsubmit-retry vulnerability-scan

.PHONY: vulnerability-scan
vulnerability-scan:
	./scripts/vulnerabilities.sh
