// Code generated by client-gen. DO NOT EDIT.

package v1

import (
	context "context"

	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
	configmanagementv1 "kpt.dev/configsync/pkg/api/configmanagement/v1"
	scheme "kpt.dev/configsync/pkg/generated/clientset/versioned/scheme"
)

// ReposGetter has a method to return a RepoInterface.
// A group's client should implement this interface.
type ReposGetter interface {
	Repos() RepoInterface
}

// RepoInterface has methods to work with Repo resources.
type RepoInterface interface {
	Create(ctx context.Context, repo *configmanagementv1.Repo, opts metav1.CreateOptions) (*configmanagementv1.Repo, error)
	Update(ctx context.Context, repo *configmanagementv1.Repo, opts metav1.UpdateOptions) (*configmanagementv1.Repo, error)
	// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().
	UpdateStatus(ctx context.Context, repo *configmanagementv1.Repo, opts metav1.UpdateOptions) (*configmanagementv1.Repo, error)
	Delete(ctx context.Context, name string, opts metav1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts metav1.DeleteOptions, listOpts metav1.ListOptions) error
	Get(ctx context.Context, name string, opts metav1.GetOptions) (*configmanagementv1.Repo, error)
	List(ctx context.Context, opts metav1.ListOptions) (*configmanagementv1.RepoList, error)
	Watch(ctx context.Context, opts metav1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts metav1.PatchOptions, subresources ...string) (result *configmanagementv1.Repo, err error)
	RepoExpansion
}

// repos implements RepoInterface
type repos struct {
	*gentype.ClientWithList[*configmanagementv1.Repo, *configmanagementv1.RepoList]
}

// newRepos returns a Repos
func newRepos(c *ConfigmanagementV1Client) *repos {
	return &repos{
		gentype.NewClientWithList[*configmanagementv1.Repo, *configmanagementv1.RepoList](
			"repos",
			c.RESTClient(),
			scheme.ParameterCodec,
			"",
			func() *configmanagementv1.Repo { return &configmanagementv1.Repo{} },
			func() *configmanagementv1.RepoList { return &configmanagementv1.RepoList{} },
		),
	}
}
