// Code generated by client-gen. DO NOT EDIT.

package v1

import (
	context "context"

	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
	configmanagementv1 "kpt.dev/configsync/pkg/api/configmanagement/v1"
	scheme "kpt.dev/configsync/pkg/generated/clientset/versioned/scheme"
)

// NamespaceSelectorsGetter has a method to return a NamespaceSelectorInterface.
// A group's client should implement this interface.
type NamespaceSelectorsGetter interface {
	NamespaceSelectors() NamespaceSelectorInterface
}

// NamespaceSelectorInterface has methods to work with NamespaceSelector resources.
type NamespaceSelectorInterface interface {
	Create(ctx context.Context, namespaceSelector *configmanagementv1.NamespaceSelector, opts metav1.CreateOptions) (*configmanagementv1.NamespaceSelector, error)
	Update(ctx context.Context, namespaceSelector *configmanagementv1.NamespaceSelector, opts metav1.UpdateOptions) (*configmanagementv1.NamespaceSelector, error)
	Delete(ctx context.Context, name string, opts metav1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts metav1.DeleteOptions, listOpts metav1.ListOptions) error
	Get(ctx context.Context, name string, opts metav1.GetOptions) (*configmanagementv1.NamespaceSelector, error)
	List(ctx context.Context, opts metav1.ListOptions) (*configmanagementv1.NamespaceSelectorList, error)
	Watch(ctx context.Context, opts metav1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts metav1.PatchOptions, subresources ...string) (result *configmanagementv1.NamespaceSelector, err error)
	NamespaceSelectorExpansion
}

// namespaceSelectors implements NamespaceSelectorInterface
type namespaceSelectors struct {
	*gentype.ClientWithList[*configmanagementv1.NamespaceSelector, *configmanagementv1.NamespaceSelectorList]
}

// newNamespaceSelectors returns a NamespaceSelectors
func newNamespaceSelectors(c *ConfigmanagementV1Client) *namespaceSelectors {
	return &namespaceSelectors{
		gentype.NewClientWithList[*configmanagementv1.NamespaceSelector, *configmanagementv1.NamespaceSelectorList](
			"namespaceselectors",
			c.RESTClient(),
			scheme.ParameterCodec,
			"",
			func() *configmanagementv1.NamespaceSelector { return &configmanagementv1.NamespaceSelector{} },
			func() *configmanagementv1.NamespaceSelectorList { return &configmanagementv1.NamespaceSelectorList{} },
		),
	}
}
