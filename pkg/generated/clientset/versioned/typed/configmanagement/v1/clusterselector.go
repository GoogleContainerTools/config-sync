// Code generated by client-gen. DO NOT EDIT.

package v1

import (
	context "context"

	configmanagementv1 "github.com/GoogleContainerTools/config-sync/pkg/api/configmanagement/v1"
	scheme "github.com/GoogleContainerTools/config-sync/pkg/generated/clientset/versioned/scheme"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	gentype "k8s.io/client-go/gentype"
)

// ClusterSelectorsGetter has a method to return a ClusterSelectorInterface.
// A group's client should implement this interface.
type ClusterSelectorsGetter interface {
	ClusterSelectors() ClusterSelectorInterface
}

// ClusterSelectorInterface has methods to work with ClusterSelector resources.
type ClusterSelectorInterface interface {
	Create(ctx context.Context, clusterSelector *configmanagementv1.ClusterSelector, opts metav1.CreateOptions) (*configmanagementv1.ClusterSelector, error)
	Update(ctx context.Context, clusterSelector *configmanagementv1.ClusterSelector, opts metav1.UpdateOptions) (*configmanagementv1.ClusterSelector, error)
	Delete(ctx context.Context, name string, opts metav1.DeleteOptions) error
	DeleteCollection(ctx context.Context, opts metav1.DeleteOptions, listOpts metav1.ListOptions) error
	Get(ctx context.Context, name string, opts metav1.GetOptions) (*configmanagementv1.ClusterSelector, error)
	List(ctx context.Context, opts metav1.ListOptions) (*configmanagementv1.ClusterSelectorList, error)
	Watch(ctx context.Context, opts metav1.ListOptions) (watch.Interface, error)
	Patch(ctx context.Context, name string, pt types.PatchType, data []byte, opts metav1.PatchOptions, subresources ...string) (result *configmanagementv1.ClusterSelector, err error)
	ClusterSelectorExpansion
}

// clusterSelectors implements ClusterSelectorInterface
type clusterSelectors struct {
	*gentype.ClientWithList[*configmanagementv1.ClusterSelector, *configmanagementv1.ClusterSelectorList]
}

// newClusterSelectors returns a ClusterSelectors
func newClusterSelectors(c *ConfigmanagementV1Client) *clusterSelectors {
	return &clusterSelectors{
		gentype.NewClientWithList[*configmanagementv1.ClusterSelector, *configmanagementv1.ClusterSelectorList](
			"clusterselectors",
			c.RESTClient(),
			scheme.ParameterCodec,
			"",
			func() *configmanagementv1.ClusterSelector { return &configmanagementv1.ClusterSelector{} },
			func() *configmanagementv1.ClusterSelectorList { return &configmanagementv1.ClusterSelectorList{} },
		),
	}
}
