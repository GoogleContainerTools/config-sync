// Code generated by informer-gen. DO NOT EDIT.

package v1

import (
	internalinterfaces "kpt.dev/configsync/clientgen/informer/internalinterfaces"
)

// Interface provides access to all the informers in this group version.
type Interface interface {
	// ClusterConfigs returns a ClusterConfigInformer.
	ClusterConfigs() ClusterConfigInformer
	// NamespaceConfigs returns a NamespaceConfigInformer.
	NamespaceConfigs() NamespaceConfigInformer
	// Repos returns a RepoInformer.
	Repos() RepoInformer
	// Syncs returns a SyncInformer.
	Syncs() SyncInformer
}

type version struct {
	factory          internalinterfaces.SharedInformerFactory
	namespace        string
	tweakListOptions internalinterfaces.TweakListOptionsFunc
}

// New returns a new Interface.
func New(f internalinterfaces.SharedInformerFactory, namespace string, tweakListOptions internalinterfaces.TweakListOptionsFunc) Interface {
	return &version{factory: f, namespace: namespace, tweakListOptions: tweakListOptions}
}

// ClusterConfigs returns a ClusterConfigInformer.
func (v *version) ClusterConfigs() ClusterConfigInformer {
	return &clusterConfigInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// NamespaceConfigs returns a NamespaceConfigInformer.
func (v *version) NamespaceConfigs() NamespaceConfigInformer {
	return &namespaceConfigInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// Repos returns a RepoInformer.
func (v *version) Repos() RepoInformer {
	return &repoInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}

// Syncs returns a SyncInformer.
func (v *version) Syncs() SyncInformer {
	return &syncInformer{factory: v.factory, tweakListOptions: v.tweakListOptions}
}
