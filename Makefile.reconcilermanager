

CONTROLLER_GEN := $(GOBIN)/controller-gen

.PHONY: generate
# Generate DeepCopy and runtime.Object implementation methods.
generate: install-controller-gen
	$(CONTROLLER_GEN) \
		object:headerFile="hack/boilerplate.txt" \
		paths="./pkg/api/configsync/v1alpha1" \
		paths="./pkg/api/configsync/v1beta1" \
		paths="./pkg/api/configmanagement/v1"

.PHONY: configsync-crds
# Generate configsync CRDs and then patch them with kustomize
configsync-crds: install-controller-gen "$(KUSTOMIZE)" "$(GOBIN)/addlicense"
	$(CONTROLLER_GEN) crd \
		paths="./pkg/api/configsync/v1alpha1" \
		paths="./pkg/api/configsync/v1beta1" \
		output:artifacts:config=./manifests \
	&& mv ./manifests/configsync.gke.io_reposyncs.yaml ./manifests/patch/reposync-crd.yaml \
	&& mv ./manifests/configsync.gke.io_rootsyncs.yaml ./manifests/patch/rootsync-crd.yaml \
	&& "$(KUSTOMIZE)" build ./manifests/patch -o ./manifests \
	&& mv ./manifests/*customresourcedefinition_rootsyncs* ./manifests/rootsync-crd.yaml \
	&& mv ./manifests/*customresourcedefinition_reposyncs* ./manifests/reposync-crd.yaml \
	&& rm ./manifests/patch/reposync-crd.yaml \
	&& rm ./manifests/patch/rootsync-crd.yaml \
	&& "$(GOBIN)/addlicense" ./manifests

.PHONY: install-controller-gen
# install controller-gen from source
install-controller-gen:
	go install sigs.k8s.io/controller-tools/cmd/controller-gen@v0.13.0

.PHONY: generate-in-docker
# Run make generate-in-docker in the docker buildenv container
generate-in-docker: buildenv-dirs
	@docker run $(DOCKER_RUN_ARGS) \
		make generate

.PHONY: configsync-crds-in-docker
# Run make configsync-crds in the docker buildenv container
configsync-crds-in-docker: buildenv-dirs
	@docker run $(DOCKER_RUN_ARGS) \
		make configsync-crds
